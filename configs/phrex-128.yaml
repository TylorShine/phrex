data:
  f0_extractor: 'rmvpe' # 'dio', 'harvest', 'crepe', 'rmvpe' or 'fcpe'
  f0_min: 35 # about C#1
  f0_max: 1600 # about G6
  sampling_rate: 16000 # Audio sample rate during training
  block_size: 320 # Equal to hop_length
  duration: 1.8 # Audio duration during training, must be less than the duration of the shortest audio clip
  encoder: 'wavlmbase' # 'dpwavlmbase' or 'wavlmbase'
  encoder_sample_rate: 16000 
  encoder_hop_size: 320
  encoder_out_channels: 768
  encoder_ckpt: models/pretrained/wavlm/WavLM-Base+.pt
  volume_window_size: 8
  dataset_path: dataset # Create a folder named "audio" under this path and put the audio clip in it
  extensions: # List of extension included in the data collection
    - wav
model:
  type: 'phrex'
  win_length: 2048
  units_layers:
    - [11, 12]
  hidden_channels: 256
  in_channels: 256
  out_channels: 128
  spec_n_fft: 512
  noise_seed: 289
loss:
  beta: 0.8
  gamma: 0.05
  overlap: 0.5
device: cuda
env:
  expdir: dataset/exp/phrex-128
  gpu_id: 0
train:
  num_workers: 2 # If your cpu and gpu are both very strong, set to 0 may be faster!
  amp_dtype: fp32 # fp32, fp16 or bf16 (fp16 or bf16 may be faster if it is supported by your gpu)
  batch_size: 48
  cache_all_data: true # Save Internal-Memory or Graphics-Memory if it is false, but may be slow
  cache_device: 'cpu' # Set to 'cuda' to cache the data into the Graphics-Memory, fastest speed for strong gpu
  cache_fp16: true
  epochs: 10000
  interval_log: 10
  interval_val: 100
  lr: 0.0002
  weight_decay: 0
  sched_factor: 0.5
  sched_patience: 30
  sched_threshold: 0.00001
  sched_threshold_mode: 'rel'
  sched_cooldown: 2
  sched_min_lr: 0.000002
  save_opt: false
  # only necessary when training the unit2ctrl unit conv stacks below
  frame_hop_random_min: 24
  frame_hop_random_max: 64
  loss_variation: 0.1
  low_similar_loss_variation: 0.7
